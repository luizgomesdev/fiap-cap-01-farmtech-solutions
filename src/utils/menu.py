"""
M√≥dulo para gerenciamento do menu interativo da aplica√ß√£o
"""

def exibir_menu_principal():
    """
    Exibe o menu principal da aplica√ß√£o e gerencia a intera√ß√£o do usu√°rio
    """
    while True:
        print("\n" + "-"*40)
        print("MENU PRINCIPAL".center(40))
        print("-"*40)
        print("[1] Gest√£o de Culturas")
        print("[2] C√°lculo de √Årea Plantada")
        print("[3] Manejo de Insumos")
        print("[4] Exportar Dados para An√°lise")
        print("[5] Sobre o Sistema")
        print("[0] Sair")
        print("-"*40)
        
        try:
            opcao = int(input("\nEscolha uma op√ß√£o: "))
            
            if opcao == 0:
                print("\nSaindo do sistema...")
                break
            elif opcao == 1:
                menu_culturas()
            elif opcao == 2:
                menu_calculo_area()
            elif opcao == 3:
                menu_insumos()
            elif opcao == 4:
                exportar_dados()
            elif opcao == 5:
                exibir_sobre()
            else:
                print("\n‚ùå Op√ß√£o inv√°lida! Por favor, tente novamente.")
        except ValueError:
            print("\n‚ùå Entrada inv√°lida! Digite apenas n√∫meros.")

def menu_culturas():
    """
    Menu para gest√£o de culturas
    """
    print("\n" + "-"*40)
    print("GEST√ÉO DE CULTURAS".center(40))
    print("-"*40)
    print("[1] Cadastrar Nova Cultura")
    print("[2] Listar Culturas")
    print("[3] Atualizar Cultura")
    print("[4] Remover Cultura")
    print("[0] Voltar ao Menu Principal")
    print("-"*40)
    
    try:
        opcao = int(input("\nEscolha uma op√ß√£o: "))
        
        if opcao == 0:
            return
        elif opcao == 1:
            print("\n‚ûï Fun√ß√£o para cadastrar cultura ser√° implementada.")
        elif opcao == 2:
            print("\nüìã Fun√ß√£o para listar culturas ser√° implementada.")
        elif opcao == 3:
            print("\n‚úèÔ∏è Fun√ß√£o para atualizar cultura ser√° implementada.")
        elif opcao == 4:
            print("\n‚ùå Fun√ß√£o para remover cultura ser√° implementada.")
        else:
            print("\n‚ùå Op√ß√£o inv√°lida! Por favor, tente novamente.")
    except ValueError:
        print("\n‚ùå Entrada inv√°lida! Digite apenas n√∫meros.")

def menu_calculo_area():
    """
    Menu para c√°lculo de √°rea
    """
    print("\n" + "-"*40)
    print("C√ÅLCULO DE √ÅREA PLANTADA".center(40))
    print("-"*40)
    print("[1] Calcular √Årea para Caf√© (Ruas)")
    print("[2] Calcular √Årea para Soja (Talh√µes)")
    print("[0] Voltar ao Menu Principal")
    print("-"*40)
    
    try:
        opcao = int(input("\nEscolha uma op√ß√£o: "))
        
        if opcao == 0:
            return
        elif opcao == 1:
            print("\n‚òï Fun√ß√£o para calcular √°rea de caf√© ser√° implementada.")
        elif opcao == 2:
            print("\nüåæ Fun√ß√£o para calcular √°rea de soja ser√° implementada.")
        else:
            print("\n‚ùå Op√ß√£o inv√°lida! Por favor, tente novamente.")
    except ValueError:
        print("\n‚ùå Entrada inv√°lida! Digite apenas n√∫meros.")

def menu_insumos():
    """
    Menu para manejo de insumos
    """
    print("\n" + "-"*40)
    print("MANEJO DE INSUMOS".center(40))
    print("-"*40)
    print("[1] Cadastrar Insumo")
    print("[2] Calcular Quantidade de Insumos")
    print("[3] Listar Insumos Cadastrados")
    print("[0] Voltar ao Menu Principal")
    print("-"*40)
    
    try:
        opcao = int(input("\nEscolha uma op√ß√£o: "))
        
        if opcao == 0:
            return
        elif opcao == 1:
            print("\n‚ûï Fun√ß√£o para cadastrar insumo ser√° implementada.")
        elif opcao == 2:
            print("\nüßÆ Fun√ß√£o para calcular quantidade de insumos ser√° implementada.")
        elif opcao == 3:
            print("\nüìã Fun√ß√£o para listar insumos ser√° implementada.")
        else:
            print("\n‚ùå Op√ß√£o inv√°lida! Por favor, tente novamente.")
    except ValueError:
        print("\n‚ùå Entrada inv√°lida! Digite apenas n√∫meros.")

def exportar_dados():
    """
    Fun√ß√£o para exportar dados para an√°lise em R
    """
    print("\nüìä Fun√ß√£o para exportar dados ser√° implementada.")

def exibir_sobre():
    """
    Exibe informa√ß√µes sobre o sistema
    """
    print("\n" + "-"*60)
    print("SOBRE O SISTEMA".center(60))
    print("-"*60)
    print("FarmTech Solutions - Aplica√ß√£o para Agricultura Digital")
    print("Vers√£o: 1.0.0")
    print("Desenvolvido para fazendas em Minas Gerais")
    print("Suporte para culturas de caf√© e soja")
    print("\nDesenvolvido por:")
    print("- Nome 1 (L√≠der de Projeto)")
    print("- Nome 2 (Desenvolvedor Python)")
    print("- Nome 3 (Analista de Dados em R)")
    print("- Nome 4 (Documenta√ß√£o e Versionamento)")
    print("-"*60)
